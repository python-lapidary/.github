{% from 'type_hint.py.jinja2' import type_hint %}
@pydantic.dataclasses.dataclass
class {{ model.class_name }}({{ type_hint(model.base_type, path) }}):
{%- for attr in model.attributes %}
    {{ attr.name }}: {{ type_hint(attr.annotation.type, path) }} = pydantic.dataclasses.Field(
    {%- for key, value in attr.annotation.field_props.items() -%}
        {{ key }}={{ value }},
    {%- endfor -%}
    {%- if attr.annotation.default is not none %}
        default={{ attr.annotation.default }}{% endif %}
    )
{% endfor %}
    class Config(pydantic.BaseConfig):
        allow_population_by_field_name = True
